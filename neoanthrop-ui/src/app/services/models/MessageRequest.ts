/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface MessageRequest
 */
export interface MessageRequest {
    /**
     * 
     * @type {string}
     * @memberof MessageRequest
     */
    senderId?: string;
    /**
     * 
     * @type {string}
     * @memberof MessageRequest
     */
    recipientId?: string;
    /**
     * 
     * @type {string}
     * @memberof MessageRequest
     */
    message?: string;
    /**
     * 
     * @type {string}
     * @memberof MessageRequest
     */
    type?: MessageRequestTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof MessageRequest
     */
    chatId?: string;
}


/**
 * @export
 */
export const MessageRequestTypeEnum = {
    Text: 'TEXT',
    Image: 'IMAGE',
    Video: 'VIDEO',
    Audio: 'AUDIO',
    Document: 'DOCUMENT'
} as const;
export type MessageRequestTypeEnum = typeof MessageRequestTypeEnum[keyof typeof MessageRequestTypeEnum];


/**
 * Check if a given object implements the MessageRequest interface.
 */
export function instanceOfMessageRequest(value: object): value is MessageRequest {
    return true;
}

export function MessageRequestFromJSON(json: any): MessageRequest {
    return MessageRequestFromJSONTyped(json, false);
}

export function MessageRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): MessageRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'senderId': json['senderId'] == null ? undefined : json['senderId'],
        'recipientId': json['recipientId'] == null ? undefined : json['recipientId'],
        'message': json['message'] == null ? undefined : json['message'],
        'type': json['type'] == null ? undefined : json['type'],
        'chatId': json['chatId'] == null ? undefined : json['chatId'],
    };
}

export function MessageRequestToJSON(json: any): MessageRequest {
    return MessageRequestToJSONTyped(json, false);
}

export function MessageRequestToJSONTyped(value?: MessageRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'senderId': value['senderId'],
        'recipientId': value['recipientId'],
        'message': value['message'],
        'type': value['type'],
        'chatId': value['chatId'],
    };
}

