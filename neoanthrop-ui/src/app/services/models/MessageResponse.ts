/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface MessageResponse
 */
export interface MessageResponse {
    /**
     * 
     * @type {number}
     * @memberof MessageResponse
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof MessageResponse
     */
    content?: string;
    /**
     * 
     * @type {string}
     * @memberof MessageResponse
     */
    state?: MessageResponseStateEnum;
    /**
     * 
     * @type {string}
     * @memberof MessageResponse
     */
    type?: MessageResponseTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof MessageResponse
     */
    senderId?: string;
    /**
     * 
     * @type {string}
     * @memberof MessageResponse
     */
    recipientId?: string;
    /**
     * 
     * @type {Date}
     * @memberof MessageResponse
     */
    createdAt?: Date;
    /**
     * 
     * @type {Array<string>}
     * @memberof MessageResponse
     */
    mediaFile?: Array<string>;
}


/**
 * @export
 */
export const MessageResponseStateEnum = {
    Sent: 'SENT',
    Delivered: 'DELIVERED',
    Read: 'READ'
} as const;
export type MessageResponseStateEnum = typeof MessageResponseStateEnum[keyof typeof MessageResponseStateEnum];

/**
 * @export
 */
export const MessageResponseTypeEnum = {
    Text: 'TEXT',
    Image: 'IMAGE',
    Video: 'VIDEO',
    Audio: 'AUDIO',
    Document: 'DOCUMENT'
} as const;
export type MessageResponseTypeEnum = typeof MessageResponseTypeEnum[keyof typeof MessageResponseTypeEnum];


/**
 * Check if a given object implements the MessageResponse interface.
 */
export function instanceOfMessageResponse(value: object): value is MessageResponse {
    return true;
}

export function MessageResponseFromJSON(json: any): MessageResponse {
    return MessageResponseFromJSONTyped(json, false);
}

export function MessageResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): MessageResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'content': json['content'] == null ? undefined : json['content'],
        'state': json['state'] == null ? undefined : json['state'],
        'type': json['type'] == null ? undefined : json['type'],
        'senderId': json['senderId'] == null ? undefined : json['senderId'],
        'recipientId': json['recipientId'] == null ? undefined : json['recipientId'],
        'createdAt': json['createdAt'] == null ? undefined : (new Date(json['createdAt'])),
        'mediaFile': json['mediaFile'] == null ? undefined : json['mediaFile'],
    };
}

export function MessageResponseToJSON(json: any): MessageResponse {
    return MessageResponseToJSONTyped(json, false);
}

export function MessageResponseToJSONTyped(value?: MessageResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'content': value['content'],
        'state': value['state'],
        'type': value['type'],
        'senderId': value['senderId'],
        'recipientId': value['recipientId'],
        'createdAt': value['createdAt'] == null ? undefined : ((value['createdAt']).toISOString()),
        'mediaFile': value['mediaFile'],
    };
}

